openapi: "3.0.3"
info:
  title: "spring_boot_example Customer API"
  description: "spring_boot_example Customer API"
  version: "1.0.0"
servers:
  - url: "{appUrl}"
paths:
  /api/v1/customer/all:
    get:
      summary: "GET api/v1/customer/all"
      operationId: "getAll"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Customer"
  /api/v1/customer/list:
    get:
      summary: "GET api/v1/customer/list"
      operationId: "getAll_alt"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Customer"
  /api/v1/customer/{id}:
    get:
      summary: "GET api/v1/customer/{id}"
      operationId: "get"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Customer"
    delete:
      summary: "DELETE api/v1/customer/{id}"
      operationId: "deleteById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
    put:
      summary: "PUT api/v1/customer/{id}"
      operationId: "update"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Customer"
  /api/v1/customer:
    post:
      summary: "POST api/v1/customer"
      operationId: "post"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Customer"
components:
  schemas:
    Customer:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        email:
          type: "string"
        age:
          type: "integer"
          format: "int32"
    CustomerDto:
      type: "object"
      properties:
        name:
          type: "string"
        email:
          type: "string"
        age:
          type: "integer"
          format: "int32"